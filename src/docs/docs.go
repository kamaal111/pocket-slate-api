// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "MIT",
            "url": "https://github.com/kamaal111/pocket-slate-api/blob/main/LICENSE"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/health/ping": {
            "get": {
                "description": "Pings the server",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Checks if server is up or down",
                "operationId": "healthPing",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/health.pingResponse"
                        }
                    }
                }
            }
        },
        "/translations": {
            "post": {
                "description": "Translates the given text in the payload from source locale to target locale.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "translations"
                ],
                "summary": "Translate text.",
                "operationId": "makeTranslation",
                "parameters": [
                    {
                        "type": "string",
                        "example": "4.2.0",
                        "description": "The version of the app.",
                        "name": "App-Version",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "sup-app",
                        "description": "The name of the app.",
                        "name": "App-Name",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "1234lmao",
                        "description": "API key registered to the app.",
                        "name": "Api-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "The text to translate.",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/translations.makeTranslationPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/translations.makeTranslationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.errorMessage"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/utils.errorMessage"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/utils.errorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.errorMessage"
                        }
                    }
                }
            }
        },
        "/translations/supported-locales": {
            "get": {
                "description": "Gets all the supported locales that can be used to translate.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "translations"
                ],
                "summary": "Gets supported locales.",
                "operationId": "getSupportedLocales",
                "parameters": [
                    {
                        "type": "string",
                        "default": "en",
                        "example": "it",
                        "description": "The target language to translate the locales to.",
                        "name": "target",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "4.2.0",
                        "description": "The version of the app.",
                        "name": "App-Version",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "sup-app",
                        "description": "The name of the app.",
                        "name": "App-Name",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "1234lmao",
                        "description": "API key registered to the app.",
                        "name": "Api-Key",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/translations.supportedLocaleResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.errorMessage"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/utils.errorMessage"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/utils.errorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.errorMessage"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "health.pingResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "translations.makeTranslationPayload": {
            "type": "object",
            "required": [
                "source_locale",
                "target_locale",
                "text"
            ],
            "properties": {
                "source_locale": {
                    "type": "string"
                },
                "target_locale": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "translations.makeTranslationResponse": {
            "type": "object",
            "properties": {
                "translated_text": {
                    "type": "string"
                }
            }
        },
        "translations.supportedLocaleResponse": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "tag": {
                    "type": "string"
                }
            }
        },
        "utils.errorMessage": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Pocket slate API",
	Description:      "API for pocket slate",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
